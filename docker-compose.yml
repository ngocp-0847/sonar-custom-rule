services:
  sonarqube:
    image: sonarqube:lts
    container_name: sonarqube
    ports:
      - "9000:9000"
    environment:
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_extensions:/opt/sonarqube/extensions
    networks:
      - sonar-network

  sonar-scanner:
    image: sonarsource/sonar-scanner-cli
    container_name: sonar-scanner
    platform: linux/amd64
    env_file:
      - .env
    volumes:
      - ${SONAR_SCAN_PATH}:/usr/src:rw
    environment:
      - SONAR_HOST_URL
      - SONAR_SCANNER_OPTS=-Dsonar.projectKey=${SONAR_PROJECT_KEY} -Dsonar.projectName=${SONAR_PROJECT_NAME} -Dsonar.projectVersion=${SONAR_PROJECT_VERSION} -Dsonar.sources=. -Dsonar.login=${SONAR_LOGIN} -Dsonar.projectBaseDir=/usr/src -Dsonar.scm.disabled=true  -Dsonar.java.binaries=${SONAR_JAVA_BINARIES}
    working_dir: /usr/src

networks:
  sonar-network:
    driver: bridge
    ipam:
      config:
        - subnet: "192.168.1.0/24"

volumes:
  sonarqube_data:
  sonarqube_logs:
  sonarqube_extensions:
